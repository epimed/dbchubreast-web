package dbchubreast_web.entity;
// Generated 19 dï¿½c. 2016 13:44:40 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ChuCodeTh generated by hbm2java
 */
@Entity
@Table(name = "chu_code_th", schema = "db_chu_breast")
public class ChuCodeTh implements java.io.Serializable {

	private Integer idCodeTh;
	private String nom;
	private Set<ChuAntecedentGyneco> chuAntecedentGynecosForIdContraceptif = new HashSet<ChuAntecedentGyneco>(0);
	private Set<ChuAntecedentGyneco> chuAntecedentGynecosForIdThs = new HashSet<ChuAntecedentGyneco>(0);

	public ChuCodeTh() {
	}

	public ChuCodeTh(Integer idCodeTh, String nom) {
		this.idCodeTh = idCodeTh;
		this.nom = nom;
	}

	public ChuCodeTh(Integer idCodeTh, String nom, Set<ChuAntecedentGyneco> chuAntecedentGynecosForIdContraceptif,
			Set<ChuAntecedentGyneco> chuAntecedentGynecosForIdThs) {
		this.idCodeTh = idCodeTh;
		this.nom = nom;
		this.chuAntecedentGynecosForIdContraceptif = chuAntecedentGynecosForIdContraceptif;
		this.chuAntecedentGynecosForIdThs = chuAntecedentGynecosForIdThs;
	}

	@Id

	@Column(name = "id_code_th", unique = true, nullable = false)
	public Integer getIdCodeTh() {
		return this.idCodeTh;
	}

	public void setIdCodeTh(Integer idCodeTh) {
		this.idCodeTh = idCodeTh;
	}

	@Column(name = "nom", nullable = false, length = 100)
	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chuCodeThByIdContraceptif")
	public Set<ChuAntecedentGyneco> getChuAntecedentGynecosForIdContraceptif() {
		return this.chuAntecedentGynecosForIdContraceptif;
	}

	public void setChuAntecedentGynecosForIdContraceptif(
			Set<ChuAntecedentGyneco> chuAntecedentGynecosForIdContraceptif) {
		this.chuAntecedentGynecosForIdContraceptif = chuAntecedentGynecosForIdContraceptif;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chuCodeThByIdThs")
	public Set<ChuAntecedentGyneco> getChuAntecedentGynecosForIdThs() {
		return this.chuAntecedentGynecosForIdThs;
	}

	public void setChuAntecedentGynecosForIdThs(Set<ChuAntecedentGyneco> chuAntecedentGynecosForIdThs) {
		this.chuAntecedentGynecosForIdThs = chuAntecedentGynecosForIdThs;
	}

}
